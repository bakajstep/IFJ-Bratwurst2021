.IFJcode21
DEFVAR GF@expr
DEFVAR GF@tmp1
DEFVAR GF@tmp2
DEFVAR GF@tmp3
DEFVAR GF@tmp4
DEFVAR GF@trash
CREATEFRAME
#----FUN-write----
JUMP write$end
LABEL write
PUSHFRAME
CREATEFRAME
DEFVAR TF@cnt_of_parameter
DEFVAR TF@to_print
DEFVAR TF@cnt
POPS TF@cnt_of_parameter
MOVE TF@cnt int@0
LABEL _print_while_start
LT GF@expr TF@cnt TF@cnt_of_parameter
JUMPIFNEQ _print_while_end GF@expr bool@true
POPS TF@to_print
JUMPIFNEQ exprint TF@to_print nil@nil 
PUSHS string@nil
POPS TF@to_print
LABEL exprint
WRITE TF@to_print
ADD TF@cnt TF@cnt int@1
JUMP _print_while_start
LABEL _print_while_end
POPFRAME
RETURN
LABEL write$end
#----FUN-reads----
JUMP reads$end
LABEL reads
PUSHFRAME
CREATEFRAME
POPS GF@trash
DEFVAR TF@out
READ TF@out string
PUSHS TF@out
POPFRAME
RETURN
LABEL reads$end
#----FUN-readi----
JUMP readi$end
LABEL readi
PUSHFRAME
CREATEFRAME
POPS GF@trash
DEFVAR TF@out
READ TF@out int
PUSHS TF@out
POPFRAME
RETURN
LABEL readi$end
#----FUN-readn----
JUMP readn$end
LABEL readn
PUSHFRAME
CREATEFRAME
POPS GF@trash
DEFVAR TF@out
READ TF@out float
PUSHS TF@out
POPFRAME
RETURN
LABEL readn$end
#----FUN-tointeger----
JUMP tointeger$end
LABEL tointeger
POPS GF@trash
FLOAT2INTS
RETURN
LABEL tointeger$end
#----FUN-substr----
JUMP substr$end
LABEL substr
PUSHFRAME
CREATEFRAME
POPS GF@trash
DEFVAR TF@ret_str
MOVE TF@ret_str string@
DEFVAR TF@s
POPS TF@s
DEFVAR TF@i
POPS TF@i
SUB TF@i TF@i int@1
DEFVAR TF@n
POPS TF@n
DEFVAR TF@char
MOVE TF@char string@
DEFVAR TF@str_len
DEFVAR TF@l_limit
DEFVAR TF@r_limit
STRLEN TF@str_len TF@s
LT TF@l_limit TF@i int@0
NOT TF@l_limit TF@l_limit
GT TF@r_limit TF@i TF@str_len
NOT TF@r_limit TF@r_limit
AND TF@l_limit TF@l_limit TF@r_limit
LT TF@r_limit TF@n int@0
NOT TF@r_limit TF@r_limit
AND TF@l_limit TF@l_limit TF@r_limit
JUMPIFNEQ _sub_end TF@l_limit bool@true
DEFVAR TF@cnt_of_loaded
MOVE TF@cnt_of_loaded TF@i
LABEL _sub_while
LT TF@l_limit TF@i TF@str_len
LT TF@r_limit TF@cnt_of_loaded TF@n
AND TF@l_limit TF@l_limit TF@r_limit
JUMPIFNEQ _sub_end TF@l_limit bool@true
GETCHAR TF@char TF@s TF@i
CONCAT TF@ret_str TF@ret_str TF@char
ADD TF@cnt_of_loaded TF@cnt_of_loaded int@1
ADD TF@i TF@i int@1
JUMP _sub_while
LABEL _sub_end
PUSHS TF@ret_str
POPFRAME
RETURN
LABEL substr$end
#----FUN-ord----
JUMP ord$end
LABEL ord
PUSHFRAME
CREATEFRAME
POPS GF@trash
DEFVAR TF@ascii
DEFVAR TF@err
MOVE TF@ascii string@
MOVE TF@err int@1
DEFVAR TF@l_limit
DEFVAR TF@r_limit
DEFVAR TF@string
DEFVAR TF@i
POPS TF@string
POPS TF@i
DEFVAR TF@str_len
MOVE TF@str_len int@0
STRLEN TF@str_len TF@string
SUB TF@str_len TF@str_len int@1
LT TF@l_limit TF@i int@0
NOT TF@l_limit TF@l_limit
GT TF@r_limit TF@i TF@str_len
NOT TF@r_limit TF@r_limit
AND TF@l_limit TF@l_limit TF@r_limit
JUMPIFNEQ _ord_end TF@l_limit bool@true
MOVE TF@err int@0
STRI2INT TF@ascii TF@string TF@i
LABEL _ord_end
PUSHS TF@ascii
PUSHS TF@err
POPFRAME
RETURN
LABEL ord$end
#----FUN-chr----
JUMP chr$end
LABEL chr
PUSHFRAME
CREATEFRAME
POPS GF@trash
DEFVAR TF@ret_str
MOVE TF@ret_str string@
DEFVAR TF@err
MOVE TF@err int@1
DEFVAR TF@l_limit
DEFVAR TF@r_limit
DEFVAR TF@i
POPS TF@i
LT TF@l_limit TF@i int@0
NOT TF@l_limit TF@l_limit
GT TF@r_limit TF@i int@255
NOT TF@r_limit TF@r_limit
AND TF@l_limit TF@l_limit TF@r_limit
JUMPIFNEQ _chr_end TF@l_limit bool@true
MOVE TF@err int@0
INT2CHAR TF@ret_str TF@i
LABEL _chr_end
PUSHS TF@ret_str
PUSHS TF@err
POPFRAME
RETURN
LABEL chr$end
#----FUN-main----
JUMP main$end
LABEL main
PUSHFRAME
CREATEFRAME
POPS GF@trash
DEFVAR TF@$s1$0
PUSHS nil@nil
POPS TF@$s1$0
PUSHS string@Toto\032je\032nejaky\032text
POPS TF@$s1$0
DEFVAR TF@$s2$0
PUSHS nil@nil
POPS TF@$s2$0
PUSHS TF@$s1$0
PUSHS string@,\032ktery\032jeste\032trochu\032obohatime
POPS GF@tmp1
POPS GF@tmp2
JUMPIFEQ ERR8 GF@tmp1 nil@nil
JUMPIFEQ ERR8 GF@tmp2 nil@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
POPS GF@tmp1
POPS GF@tmp2
CONCAT GF@tmp1 GF@tmp2 GF@tmp1
PUSHS GF@tmp1
POPS TF@$s2$0
PUSHS TF@$s2$0
PUSHS string@\010
PUSHS TF@$s1$0
PUSHS int@3
CALL write
DEFVAR TF@$s1len$0
PUSHS nil@nil
POPS TF@$s1len$0
PUSHS TF@$s1$0
POPS GF@tmp1
JUMPIFEQ ERR8 GF@tmp1 nil@nil
PUSHS GF@tmp1
POPS GF@tmp1
STRLEN GF@tmp4 GF@tmp1
PUSHS GF@tmp4
POPS TF@$s1len$0
DEFVAR TF@$s1len4$0
PUSHS nil@nil
POPS TF@$s1len4$0
PUSHS TF@$s1len$0
POPS TF@$s1len4$0
PUSHS TF@$s1len$0
PUSHS int@4
POPS GF@tmp1
POPS GF@tmp2
JUMPIFEQ ERR8 GF@tmp1 nil@nil
JUMPIFEQ ERR8 GF@tmp2 nil@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
SUBS
POPS TF@$s1len$0
PUSHS TF@$s1len4$0
PUSHS TF@$s1len$0
PUSHS TF@$s2$0
PUSHS int@3
CALL substr
POPS TF@$s1$0
PUSHS TF@$s1len$0
PUSHS int@1
POPS GF@tmp1
POPS GF@tmp2
JUMPIFEQ ERR8 GF@tmp1 nil@nil
JUMPIFEQ ERR8 GF@tmp2 nil@nil
PUSHS GF@tmp2
PUSHS GF@tmp1
ADDS
POPS TF@$s1len$0
PUSHS string@\010
PUSHS TF@$s1$0
PUSHS string@\034:
PUSHS TF@$s2$0
PUSHS string@.\032znaku\032v\032\034
PUSHS TF@$s1len$0
PUSHS string@4\032znaky\032od
PUSHS int@7
CALL write
PUSHS string@Zadejte\032serazenou\032posloupnost\032vsech\032malych\032pismen\032a-h,\032
PUSHS int@1
CALL write
PUSHS string@pricemz\032se\032pismena\032nesmeji\032v\032posloupnosti\032opakovat:\032
PUSHS int@1
CALL write
PUSHS int@0
CALL reads
POPS TF@$s1$0
PUSHS TF@$s1$0
PUSHS nil@nil
EQS
NOTS
POPS GF@expr
JUMPIFNEQ if$0$else GF@expr bool@true
LABEL while$0$start
PUSHS TF@$s1$0
PUSHS string@abcdefgh
EQS
NOTS
POPS GF@expr
JUMPIFNEQ while$0$end GF@expr bool@true
PUSHS string@Spatne\032zadana\032posloupnost,\032zkuste\032znovu:
PUSHS string@\010
PUSHS int@2
CALL write
PUSHS int@0
CALL reads
POPS TF@$s1$0
JUMP while$0$start
LABEL while$0$end
JUMP errorOp_End
LABEL ERR9
EXIT int@9
JUMP errorOp_End
LABEL ERR8
EXIT int@8
LABEL errorOp_End
SYNTAX ERROR
Err code: 2
